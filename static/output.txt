
✅ Connected to the database successfully.


📚 Available Tables and Schemas:

📌 Table: dept_tbl
  - dept_id (int)
  - dept_name (varchar(30))

📌 Table: desig_tbl
  - desig_id (int)
  - desig_name (varchar(30))

📌 Table: emp_details_view
  - emp_id (int)
  - emp_name (varchar(30))
  - dept_name (varchar(30))
  - desig_name (varchar(30))

📌 Table: emp_payroll_summary
  - emp_name (varchar(30))
  - salary (int)
  - present_days (int)

📌 Table: employee_log
  - log_id (int)
  - emp_id (int)
  - action_time (timestamp)

📌 Table: employee_log_tbl
  - log_id (int)
  - emp_id (int)
  - emp_name (varchar(30))
  - log_time (timestamp)

📌 Table: employee_tbl
  - emp_id (int)
  - emp_name (varchar(30))
  - emp_code (char(4))
  - dept_id (int)
  - desig_id (int)
  - manager_id (int)
  - joining_dt (date)

📌 Table: marketing_employees
  - emp_id (int)
  - emp_name (varchar(30))

📌 Table: ot_setting
  - ot_id (int)
  - shift_id (int)
  - dept_id (int)
  - ot_rate (varchar(30))

📌 Table: payproposal_tbl
  - id (int)
  - emp_id (int)
  - salary (int)

📌 Table: payroll_basic
  - id (int)
  - emp_id (int)
  - salary (int)

📌 Table: payroll_data
  - id (int)
  - emp_id (int)
  - month (int)
  - year (int)
  - salary (int)
  - present_days (int)
  - bonus (int)

📌 Table: payroll_tbl
  - id (int)
  - emp_id (int)
  - month (int)
  - year (int)
  - salary (int)
  - present_days (int)
  - bonus (int)

📌 Table: salary_audit
  - audit_id (int)
  - emp_id (int)
  - old_salary (int)
  - new_salary (int)
  - changed_on (timestamp)

📌 Table: salary_audit_tbl
  - emp_id (int)
  - old_salary (int)
  - new_salary (int)
  - change_time (timestamp)

📌 Table: shift_tbl
  - shift_id (int)
  - shift_name (varchar(30))

--- Generating SQL Query ---

🧠 Generated SQL Query:

SELECT emp_name FROM employee_tbl;

📊 Query Result (first 5 rows):
emp_name
    Alan
    Bina
   Casey
   Dolly
  Edison

💾 Query results saved to static/query_output.html

--- Generating Visualizations ---

📈 3 Suggested Chart(s):


🔢 Chart #1 Code:
import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(8,6))
sns.countplot(x="emp_name", data=df)
plt.title("Employee Count")
plt.xlabel("Employee Name")
plt.ylabel("Count")
plt.show()

🔍 Rendering Chart #1...
⏱️ Chart #1 rendered in 2.75 seconds
🖼️ Chart #1 saved to static/chart_1_20250701_104131.png

🔢 Chart #2 Code:
import plotly.express as px

fig = px.pie(names=df['emp_name'], values=[1]*len(df))
fig.update_layout(title_text="Employee Distribution")
fig.show()

🔍 Rendering Chart #2...
⏱️ Chart #2 rendered in 1.71 seconds
🌐 Chart #2 saved to static/chart_2_20250701_104133.html

🔢 Chart #3 Code:
import seaborn as sns
import matplotlib.pyplot as plt
from wordcloud import WordCloud, STOPWORDS

wordcloud = WordCloud(width = 800, height = 800, random_state=21, stopwords = STOPWORDS).generate(" ".join(df['emp_name']))
plt.figure(figsize=(10, 8))
plt.imshow(wordcloud, interpolation="bilinear")
plt.axis("off")
plt.title("Employee Names")
plt.show()

🔍 Rendering Chart #3...
❌ Error rendering chart #3: No module named 'wordcloud'

--- Generating ML Model Suggestions ---

🔮 Suggested Machine Learning Ideas:

1. 🎯 Target: emp_name
   🛠️ Features: []
   🧠 Type: classification
   📋 Reason: Classify employee names based on some unknown categorical distinction.


💾 ML suggestions saved to static/ml_suggestion.txt

🤖 Automatically training model for: emp_name

✅ Training ML model | Target: emp_name | Features: []
⚠️ An error occurred during ML suggestion: No objects to concatenate

🔒 Database connection closed.

✅ Connected to the database successfully.


📚 Available Tables and Schemas:

📌 Table: dept_tbl
  - dept_id (int)
  - dept_name (varchar(30))

📌 Table: desig_tbl
  - desig_id (int)
  - desig_name (varchar(30))

📌 Table: emp_details_view
  - emp_id (int)
  - emp_name (varchar(30))
  - dept_name (varchar(30))
  - desig_name (varchar(30))

📌 Table: emp_payroll_summary
  - emp_name (varchar(30))
  - salary (int)
  - present_days (int)

📌 Table: employee_log
  - log_id (int)
  - emp_id (int)
  - action_time (timestamp)

📌 Table: employee_log_tbl
  - log_id (int)
  - emp_id (int)
  - emp_name (varchar(30))
  - log_time (timestamp)

📌 Table: employee_tbl
  - emp_id (int)
  - emp_name (varchar(30))
  - emp_code (char(4))
  - dept_id (int)
  - desig_id (int)
  - manager_id (int)
  - joining_dt (date)

📌 Table: marketing_employees
  - emp_id (int)
  - emp_name (varchar(30))

📌 Table: ot_setting
  - ot_id (int)
  - shift_id (int)
  - dept_id (int)
  - ot_rate (varchar(30))

📌 Table: payproposal_tbl
  - id (int)
  - emp_id (int)
  - salary (int)

📌 Table: payroll_basic
  - id (int)
  - emp_id (int)
  - salary (int)

📌 Table: payroll_data
  - id (int)
  - emp_id (int)
  - month (int)
  - year (int)
  - salary (int)
  - present_days (int)
  - bonus (int)

📌 Table: payroll_tbl
  - id (int)
  - emp_id (int)
  - month (int)
  - year (int)
  - salary (int)
  - present_days (int)
  - bonus (int)

📌 Table: salary_audit
  - audit_id (int)
  - emp_id (int)
  - old_salary (int)
  - new_salary (int)
  - changed_on (timestamp)

📌 Table: salary_audit_tbl
  - emp_id (int)
  - old_salary (int)
  - new_salary (int)
  - change_time (timestamp)

📌 Table: shift_tbl
  - shift_id (int)
  - shift_name (varchar(30))

--- Generating SQL Query ---

🧠 Generated SQL Query:

SELECT emp_name FROM employee_tbl;

📊 Query Result (first 5 rows):
emp_name
    Alan
    Bina
   Casey
   Dolly
  Edison

💾 Query results saved to static/query_output.html

--- Generating Visualizations ---

📈 3 Suggested Chart(s):


🔢 Chart #1 Code:
import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(8,6))
sns.countplot(x="emp_name", data=df)
plt.title("Employee Count")
plt.xlabel("Employee Name")
plt.ylabel("Count")
plt.show()

🔍 Rendering Chart #1...
⏱️ Chart #1 rendered in 2.75 seconds
🖼️ Chart #1 saved to static/chart_1_20250701_104131.png

🔢 Chart #2 Code:
import plotly.express as px

fig = px.pie(names=df['emp_name'], values=[1]*len(df))
fig.update_layout(title_text="Employee Distribution")
fig.show()

🔍 Rendering Chart #2...
⏱️ Chart #2 rendered in 1.71 seconds
🌐 Chart #2 saved to static/chart_2_20250701_104133.html

🔢 Chart #3 Code:
import seaborn as sns
import matplotlib.pyplot as plt
from wordcloud import WordCloud, STOPWORDS

wordcloud = WordCloud(width = 800, height = 800, random_state=21, stopwords = STOPWORDS).generate(" ".join(df['emp_name']))
plt.figure(figsize=(10, 8))
plt.imshow(wordcloud, interpolation="bilinear")
plt.axis("off")
plt.title("Employee Names")
plt.show()

🔍 Rendering Chart #3...
❌ Error rendering chart #3: No module named 'wordcloud'

--- Generating ML Model Suggestions ---

🔮 Suggested Machine Learning Ideas:

1. 🎯 Target: emp_name
   🛠️ Features: []
   🧠 Type: classification
   📋 Reason: Classify employee names based on some unknown categorical distinction.


💾 ML suggestions saved to static/ml_suggestion.txt

🤖 Automatically training model for: emp_name

✅ Training ML model | Target: emp_name | Features: []
⚠️ An error occurred during ML suggestion: No objects to concatenate

🔒 Database connection closed.

--- Processing Complete ---✅
