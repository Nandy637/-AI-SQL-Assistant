
✅ Connected to the database successfully.


📚 Available Tables and Schemas:

📌 Table: dept_tbl
  - dept_id (int)
  - dept_name (varchar(30))

📌 Table: desig_tbl
  - desig_id (int)
  - desig_name (varchar(30))

📌 Table: emp_details_view
  - emp_id (int)
  - emp_name (varchar(30))
  - dept_name (varchar(30))
  - desig_name (varchar(30))

📌 Table: emp_payroll_summary
  - emp_name (varchar(30))
  - salary (int)
  - present_days (int)

📌 Table: employee_log
  - log_id (int)
  - emp_id (int)
  - action_time (timestamp)

📌 Table: employee_log_tbl
  - log_id (int)
  - emp_id (int)
  - emp_name (varchar(30))
  - log_time (timestamp)

📌 Table: employee_tbl
  - emp_id (int)
  - emp_name (varchar(30))
  - emp_code (char(4))
  - dept_id (int)
  - desig_id (int)
  - manager_id (int)
  - joining_dt (date)

📌 Table: marketing_employees
  - emp_id (int)
  - emp_name (varchar(30))

📌 Table: ot_setting
  - ot_id (int)
  - shift_id (int)
  - dept_id (int)
  - ot_rate (varchar(30))

📌 Table: payproposal_tbl
  - id (int)
  - emp_id (int)
  - salary (int)

📌 Table: payroll_basic
  - id (int)
  - emp_id (int)
  - salary (int)

📌 Table: payroll_data
  - id (int)
  - emp_id (int)
  - month (int)
  - year (int)
  - salary (int)
  - present_days (int)
  - bonus (int)

📌 Table: payroll_tbl
  - id (int)
  - emp_id (int)
  - month (int)
  - year (int)
  - salary (int)
  - present_days (int)
  - bonus (int)

📌 Table: salary_audit
  - audit_id (int)
  - emp_id (int)
  - old_salary (int)
  - new_salary (int)
  - changed_on (timestamp)

📌 Table: salary_audit_tbl
  - emp_id (int)
  - old_salary (int)
  - new_salary (int)
  - change_time (timestamp)

📌 Table: shift_tbl
  - shift_id (int)
  - shift_name (varchar(30))

--- Generating SQL Query ---

🧠 Generated SQL Query:

SELECT 
  d.dept_name, 
  SUM(p.salary) AS total_salary
FROM 
  employee_tbl e 
  JOIN dept_tbl d ON e.dept_id = d.dept_id 
  JOIN payroll_data p ON e.emp_id = p.emp_id
GROUP BY 
  d.dept_name
ORDER BY 
  total_salary DESC;

📊 Query Result (first 5 rows):
dept_name  total_salary
       HR      262181.0
  Finance      186090.0
       IT      116729.0

💾 Query results saved to static/query_output.html

--- Generating Visualizations ---

📈 3 Suggested Chart(s):


🔢 Chart #1 Code:
import seaborn as sns
import matplotlib.pyplot as plt

try:
    plt.figure(figsize=(10, 6))
    sns.barplot(x="dept_name", y="total_salary", data=df)
    plt.title("Total Salary by Department")
    plt.xlabel("Department Name")
    plt.ylabel("Total Salary")
except Exception as e:
    print(f"Error: {str(e)}")

🔍 Rendering Chart #1...
🖼️ Chart #1 saved and prepared for web display
⏱️ Chart #1 processed in 0.67 seconds

🔢 Chart #2 Code:
import plotly.express as px

try:
    fig = px.pie(df, names="dept_name", values="total_salary", title="Total Salary by Department")
except Exception as e:
    print(f"Error: {str(e)}")

🔍 Rendering Chart #2...
🌐 Chart #2 saved and prepared for web display
⏱️ Chart #2 processed in 1.29 seconds

🔢 Chart #3 Code:
import seaborn as sns
import matplotlib.pyplot as plt

try:
    plt.figure(figsize=(10, 6))
    sns.set(style="whitegrid")
    plt.title("Total Salary by Department")
    sns.set_context("paper")
    sns.lineplot(x="dept_name", y="total_salary", data=df, marker="o", dashes=False)
    plt.xlabel("Department Name")
    plt.ylabel("Total Salary")
except Exception as e:
    print(f"Error: {str(e)}")

🔍 Rendering Chart #3...
🖼️ Chart #3 saved and prepared for web display
⏱️ Chart #3 processed in 0.67 seconds
💾 Chart results saved to static/chart_results.json

⚠️ Skipping ML model suggestion as the query returned no data or insufficient rows (<100).

🔒 Database connection closed.

--- Processing Complete ---✅
